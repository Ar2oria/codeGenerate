<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${daoName}">
    <resultMap id="${tableName}Map" type="${pojoName}">
        #foreach($xmlBo in ${list})
            <result property="$!{xmlBo.propertyName}" column="$!{xmlBo.columnName}" jdbcType="$!{xmlBo.jdbcType}"/>
        #end
    </resultMap>

    <!-- 所有查询字段 -->
    <sql id="allSelectionColumn">
        #foreach($xmlBo in ${list})#if(($velocityCount)!=$!{list.size()})$!{xmlBo.columnName},#else$!{xmlBo.columnName}#end#end
    </sql>
    <select id="selectByPrimaryKey" resultMap="${tableName}Map" parameterType="${idParameterType}">
        select
        <include refid="allSelectionColumn"/>
        from ${table_name}
        where ${idName} = #{${idProName},jdbcType=${idJdbcType}}
    </select>
    <select id="find" resultMap="${tableName}Map" parameterType="${idParameterType}">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="allSelectionColumn"/>
        from ${table_name}
        where ${idName} = #{${idProName},jdbcType=${idJdbcType}}
    </select>
    <select id="selectAll" resultMap="${tableName}Map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="allSelectionColumn"/>
        from  ${table_name}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="${idParameterType}">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from ${table_name}
        where ${idName} = #{${idProName},jdbcType=${idJdbcType}}
    </delete>
    <delete id="delete" parameterType="${idParameterType}">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from ${table_name}
        where ${idName} = #{${idProName},jdbcType=${idJdbcType}}
    </delete>
    <insert id="insert" parameterType="${pojoName}" useGeneratedKeys="true"
            keyProperty="${idName}">
        <!--
         WARNING - @mbggenerated
         This element is automatically generated by MyBatis Generator, do not modify.
       -->
        #if(${idType} == 'String')
    <selectKey keyProperty="${idName}" resultType="String" order="BEFORE">
                select replace(uuid(),'-','') UUID
            </selectKey>
        #end
        <![CDATA[
        insert into ${table_name}(
        #foreach($xmlBo in ${list})
            #if(($velocityCount)!=$!{list.size()})
                $!xmlBo.columnName,
            #else
                $!xmlBo.columnName
            #end#end
        )values(
        #foreach($xmlBo in ${list})#if(($velocityCount)!=$!{list.size()})
            #{$!xmlBo.propertyName,jdbcType=${xmlBo.jdbcType}},
        #else
            #{$!xmlBo.propertyName,jdbcType=${xmlBo.jdbcType}}#end#end)
        ]]>
    </insert>
    <insert id="insertSelective" parameterType="${pojoName}" useGeneratedKeys="true"
            keyProperty="${idName}">
        #if(${idType} != 'String')
    <selectKey resultType="${idType}" order="AFTER" keyProperty="id">
                SELECT LAST_INSERT_ID() AS id
            </selectKey>
        #end

        #if(${idType} == 'String')
     <selectKey keyProperty="${idName}" resultType="String" order="BEFORE">
                select replace(uuid(),'-','') UUID
            </selectKey>
        #end
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into ${table_name}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #foreach($xmlBo in ${list})
    <if test="$!{xmlBo.propertyName} != null #if($!{xmlBo.type} == "STRING")and $!{xmlBo.propertyName} != ''#end">
                    $!xmlBo.columnName,
                </if>
            #end
</trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #foreach($xmlBo in ${list})
<if test="$!{xmlBo.propertyName} != null #if($!{xmlBo.type} == "STRING")and $!{xmlBo.propertyName} != ''#end">
                #{$!{xmlBo.propertyName},jdbcType=${xmlBo.jdbcType}},
            </if>
            #end
</trim>
    </insert>
    <select id="count" resultType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from ${table_name}
    </select>
    <update id="updateByPrimaryKeySelective" parameterType="${pojoName}">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update ${table_name}
        <set>
#foreach($xmlBo in ${list})
    #if($!{xmlBo.columnName} != ${idName} )
    <if test="$!{xmlBo.propertyName} != null #if($!{xmlBo.type} =="STRING")and $!{xmlBo.propertyName} != ''#end">
                $!xmlBo.columnName = #{$!{xmlBo.propertyName},jdbcType=${xmlBo.jdbcType}},
            </if>
    #end
#end
    </set>
        where ${idName} = #{${idProName},jdbcType=${idJdbcType}}
    </update>
    <update id="updateByPrimaryKey" parameterType="${pojoName}">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update ${table_name} set
        #foreach($xmlBo in ${list})
#if(($velocityCount)==$!{list.size()})
    $!xmlBo.columnName = #{$!{xmlBo.propertyName},jdbcType=${xmlBo.jdbcType}}
#else
    #if($!{xmlBo.columnName} != ${idName} )
        $!xmlBo.columnName = #{$!{xmlBo.propertyName},jdbcType=${xmlBo.jdbcType}},
    #end
#end
        #end
        where ${idName} = #{${idProName},jdbcType=${idJdbcType}}
    </update>
    <select id="findSelective" resultMap="${tableName}Map" parameterType="${pojoName}">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="allSelectionColumn"/>
        from ${table_name}
        <where>
        #foreach($xmlBo in ${list})
    <if test="$!{xmlBo.propertyName} != null #if($!{xmlBo.type} ==
                    "STRING")and $!{xmlBo.propertyName} != ''#end">
                and $!xmlBo.columnName = #{$!{xmlBo.propertyName},jdbcType=${xmlBo.jdbcType}}
            </if>
        #end
</where>
    </select>s

    <select id="findLists" resultMap="${tableName}Map" parameterType="${pojoName}">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="allSelectionColumn"/>
        from ${table_name}
        <where>
        #foreach($xmlBo in ${list})
    <if test="$!{xmlBo.propertyName} != null #if($!{xmlBo.type} ==
                    "STRING")and $!{xmlBo.propertyName} != ''#end">
                and $!xmlBo.columnName = #{$!{xmlBo.propertyName},jdbcType=${xmlBo.jdbcType}}
            </if>
        #end
</where>
    </select>

    <select id="findPageLists" resultMap="${tableName}Map" parameterType="${queryVoName}">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="allSelectionColumn"/>
        from ${table_name}
        <where>
        #foreach($xmlBo in ${list})
    <if test="$!{xmlBo.propertyName} != null #if($!{xmlBo.type} ==
                    "STRING")and $!{xmlBo.propertyName} != ''#end">
                 and $!xmlBo.columnName = #{$!{xmlBo.propertyName},jdbcType=${xmlBo.jdbcType}}
             </if>
         #end
</where>
    </select>

</mapper>
